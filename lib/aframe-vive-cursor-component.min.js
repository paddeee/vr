!function(e){function t(i){if(n[i])return n[i].exports;var s=n[i]={exports:{},id:i,loaded:!1};return e[i].call(s.exports,s,s.exports,t),s.loaded=!0,s.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");var n={CLICK:"click",MOUSEENTER:"mouseenter",MOUSEDOWN:"mousedown",MOUSELEAVE:"mouseleave",MOUSEUP:"mouseup"},i={HOVERING:"cursor-hovering",HOVERED:"cursor-hovered"};AFRAME.registerComponent("vive-cursor",{dependencies:["raycaster"],schema:{color:{type:"color","default":255},radius:{type:"number","default":"0.001"},objects:{type:"string","default":""}},multiple:!1,init:function(){var e=this.el,t=this.data,n=e.sceneEl.canvas;if(this.mouseDownEl=null,this.intersectedEl=null,!n)return void e.sceneEl.addEventListener("render-target-loaded",this.init.bind(this));var i=new THREE.CylinderGeometry(t.radius,t.radius,1e3,32),s=new THREE.MeshBasicMaterial({color:t.color}),r=new THREE.Mesh(i,s);r.position.z=-500,r.rotation.x=90*(Math.PI/180),this.el.setObject3D("vive-cursor-mesh",r);var o="near: 0.03; objects: "+t.objects;e.setAttribute("raycaster",o),this.onIntersectionBind=this.onIntersection.bind(this),this.onIntersectionClearedBind=this.onIntersectionCleared.bind(this),this.onMouseDownBind=this.onMouseDown.bind(this),this.onMouseUpBind=this.onMouseUp.bind(this)},attachEventListeners:function(){var e=this.el;e.addEventListener("raycaster-intersection",this.onIntersectionBind),e.addEventListener("raycaster-intersection-cleared",this.onIntersectionClearedBind),e.addEventListener("triggerdown",this.onMouseDownBind),e.addEventListener("triggerup",this.onMouseUpBind)},removeEventListeners:function(){var e=this.el;e.removeEventListener("raycaster-intersection",this.onIntersectionBind),e.removeEventListener("raycaster-intersection-cleared",this.onIntersectionClearedBind),e.removeEventListener("triggerdown",this.onMouseDownBind),e.removeEventListener("triggerup",this.onMouseUpBind)},onMouseDown:function(e){this.twoWayEmit(n.MOUSEDOWN),this.mouseDownEl=this.intersectedEl},onMouseUp:function(){this.twoWayEmit(n.MOUSEUP),this.intersectedEl&&this.mouseDownEl===this.intersectedEl&&this.twoWayEmit(n.CLICK)},onIntersection:function(e){var t=this,s=this.el,r=e.detail.els[0];this.intersectedEl!==r&&(this.intersectedEl=r,s.addState(i.HOVERING),r.addState(i.HOVERED),t.twoWayEmit(n.MOUSEENTER))},onIntersectionCleared:function(e){var t=this.el,s=e.detail.el;s&&this.intersectedEl&&(s.removeState(i.HOVERED),t.removeState(i.HOVERING),this.twoWayEmit(n.MOUSELEAVE),this.intersectedEl=null)},twoWayEmit:function(e){var t=this.intersectedEl;this.el.emit(e,{intersectedEl:this.intersectedEl}),t&&t.emit(e,{cursorEl:this.el})},remove:function(){var e=this.el;e.removeObject3D("vive-cursor-mesh"),this.removeEventListeners(),e.removeAttribute("raycaster")},pause:function(){this.removeEventListeners()},play:function(){this.attachEventListeners()}})}]);